
import java.awt.event.MouseEvent;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * June 7th, 2020
 * Erika Graham
 * Hangman Game Project
 * ...It got too complicated for me. I couldn't finish it.
 */

public class FrmGame1 extends javax.swing.JFrame {

    /**
     * Creates new form FrmGame1
     */
    public FrmGame1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblLivesTxt = new javax.swing.JLabel();
        lblLivesOut = new javax.swing.JLabel();
        txtWordIn = new javax.swing.JTextField();
        btnStart = new javax.swing.JButton();
        lblTopicOut = new javax.swing.JLabel();
        lblLengthTxt = new javax.swing.JLabel();
        lblLengthOut = new javax.swing.JLabel();
        lblLettersUsedTxt = new javax.swing.JLabel();
        lblInstructions = new javax.swing.JLabel();
        lblInstructions1 = new javax.swing.JLabel();
        btnCheck = new javax.swing.JButton();
        lblRead = new javax.swing.JLabel();
        lblWordToComplete = new javax.swing.JLabel();
        lblWordToCompleteOut = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtALettersUsed = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        lblTitle.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(0, 51, 255));
        lblTitle.setText("-----+++---Hangman Game---+++-----");

        lblLivesTxt.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        lblLivesTxt.setForeground(new java.awt.Color(204, 0, 0));
        lblLivesTxt.setText("Lives:");

        lblLivesOut.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        lblLivesOut.setForeground(new java.awt.Color(204, 0, 51));
        lblLivesOut.setText("6");

        btnStart.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        btnStart.setText("Start new game");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        lblTopicOut.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N

        lblLengthTxt.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        lblLengthTxt.setText("Length of the word (letters):");

        lblLengthOut.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N

        lblLettersUsedTxt.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        lblLettersUsedTxt.setText("Letters used:");

        lblInstructions.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        lblInstructions1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        btnCheck.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnCheck.setText("Check");
        btnCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCheckMouseClicked(evt);
            }
        });
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        lblRead.setFont(new java.awt.Font("Webdings", 0, 3)); // NOI18N
        lblRead.setText("The word is...");

        lblWordToComplete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblWordToComplete.setText("word to complete:");

        lblWordToCompleteOut.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        txtALettersUsed.setEditable(false);
        txtALettersUsed.setColumns(20);
        txtALettersUsed.setRows(5);
        jScrollPane1.setViewportView(txtALettersUsed);

        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("****-----DO NOT DOUBLE CLICK CHECK OR IT WILL NOT WORK----****");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(lblLettersUsedTxt)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblRead, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblLivesTxt)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblTitle)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblLivesOut, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblTopicOut, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(265, 265, 265)
                                .addComponent(lblInstructions1, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblInstructions, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtWordIn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(62, 62, 62)
                                        .addComponent(btnCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(21, 21, 21))
                                    .addComponent(jLabel1))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblLengthTxt)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblLengthOut, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(lblWordToComplete)
                                    .addGap(18, 18, 18)
                                    .addComponent(lblWordToCompleteOut, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(413, 413, 413)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLivesTxt)
                    .addComponent(lblLivesOut, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTopicOut, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLengthTxt)
                    .addComponent(lblLengthOut, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtWordIn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblWordToComplete, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblWordToCompleteOut, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRead, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(lblInstructions, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInstructions1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblLettersUsedTxt)
                        .addGap(95, 95, 95))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public String randomWords(){
    //variables to read from a document filled with words (ANIMALS)
    File dataFile = new File("Words.dat");
    FileReader in;
    BufferedReader readFile;
    String wordsRead [] = new String [10];
    String randomWord;
    int randomNumber =0;
    //reads from the file and checks the file is actually there.
        try {
            in = new FileReader(dataFile);
            readFile = new BufferedReader(in);
            
            //stores the words into an array
                for (int i=0;i<10;i++){
                    wordsRead[i]=readFile.readLine();
                }
            
                //closes the reader
            readFile.close();
            in.close();
            //catches exception when there's no document.
        } catch (IOException ex) {
            Logger.getLogger(FrmGame1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //choose a random word from the array by choosing a random index
        randomNumber = (int) Math.round(Math.random() * 9 + 1 + 0);
        //random word is stored here
        randomWord = wordsRead[randomNumber];
        
        return randomWord;
        /*
        Things to change when putting more word in the document:
        Array's length "String wordsRead [] = new String [11];"
        For loop conditions "i<11"
        randomNumber limits "10 + 1 + 0" (max-min) + 1 + (min-1)
        */
    }
    public void wordLength(String word){
        //get the length of the word
        int wordLength = word.length();
        String wordLengthString = String.valueOf(wordLength);
        //display the length to the user
        lblLengthOut.setText(wordLengthString);
    }
    public boolean isInteger(String word) {
        try {
            Integer.parseInt(word);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
    public boolean letterFound(String word, char letter){
        // check whether the letter is in the String or not and print the answer
        if ((word.indexOf(letter))>=0) //if the letter is in the string the letter
        {                              //will have a value of 0 or greater
            return true;
        } else{
        return false;
        }
    }
    public void restLives(int lives){
        int rest = lives - 1;
        String setLives = String.valueOf(rest);
        lblLivesOut.setText(setLives);
    }
    public String displayLetter(String word, char letter, int pos){
        StringBuilder sb = new StringBuilder(word);
        
        //replace character at the index
        sb.setCharAt(pos,letter);
        word = sb.toString();
        //print the modified word
        lblWordToCompleteOut.setText(word);
        
        return word;
    }
    public void userLost(int l){
        if (l<=1){
            lblInstructions.setText("You have lost. Press Start new game if you wish to keep playing.");
        }
    }
    public void userWins(String w1,String w2,int li){
        if ((w2.equals(w1))&&(li>0)){
            lblInstructions.setText("You've won the game!");
        }
    }
    
    private int clicked = 0;
    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // get the random word for the user to guess
        String wordToGuess = randomWords();
        // set the word to complete and replace the letters with spaces
        String wordHidden = wordToGuess.replaceAll("(?s).", "*");
        lblWordToCompleteOut.setText(wordHidden);
        lblRead.setText(wordToGuess);
        //get the length of the word and display it to the user
        wordLength(wordToGuess);
        //reset number of lives
        lblLivesOut.setText("6");
        //reset letters used
        txtALettersUsed.setText("No letters");
        //reset instructions
        lblInstructions.setText(" ");
        lblInstructions1.setText(" ");
        //reset number of clicks
        clicked = 0;
    }//GEN-LAST:event_btnStartActionPerformed


    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        //get how many times the button is clicked
        clicked++;
        String clicks = String.valueOf(clicked);
        lblInstructions1.setText(clicks);
        //get the user's letter
        String wordInput = txtWordIn.getText();
        String wordToGuess = lblRead.getText();
        String userCompletesWord = lblWordToCompleteOut.getText();
        int lengthOfInput = wordInput.length();
        int lengthOfWord = wordToGuess.length();
        int lives = Integer.parseInt(lblLivesOut.getText());
        char wordToChar = '@';
        char wordDivided [] = new char [lengthOfWord];
        
        
        //divide the word into characters and store them into an array
        for (int i=0;i==lengthOfWord+1;i++){
            wordDivided[i]= wordToGuess.charAt(i);
        }

        //check if the input is one character and not a number
        if ((lengthOfInput > 1)||(isInteger(wordInput))==true){
            lblInstructions.setText("Please click Start New Game and enter a single letter, not a number nor a word.");
        } else {
            wordToChar = wordInput.charAt(0);
        }

        //check if the letter is in the word
        boolean found = letterFound(wordToGuess,wordToChar);
        //IF LETTER IS NOT ON THE STRING PRINT A MESSAGE, DISPLAY IT, AND REST A LIVE.
        if (found==false){ //if the letter is not in the string...
            lblInstructions1.setText("This letter is not in the word.");
            restLives(lives);
            //Display letters entered by the user
            String charToWord = String.valueOf(wordToChar);
            txtALettersUsed.setText(charToWord+", ");
            //maybe create an array for all the past letters and print them all <<<<<<------
//            txtALettersUsed.setText(wordInput+",  ");

        } else if (found == true){   //if the letter is in the word
            int index = wordToGuess.indexOf(wordToChar); //position/index
            char letter = wordDivided[index]; //character
            //method to replace the * to the letter
            wordToGuess = displayLetter(wordToGuess,wordDivided[index],index); 
        }
        //methods for when the user wins or loses a game
        userWins(wordToGuess, userCompletesWord,lives);
        userLost(lives);
        
        
    }//GEN-LAST:event_btnCheckActionPerformed

    private void btnCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCheckMouseClicked
        if (evt.getClickCount() == 2){
            lblInstructions.setText("There has been a double click. Please click Start new game.");
        }
    }//GEN-LAST:event_btnCheckMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmGame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmGame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmGame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmGame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmGame1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInstructions;
    private javax.swing.JLabel lblInstructions1;
    private javax.swing.JLabel lblLengthOut;
    private javax.swing.JLabel lblLengthTxt;
    private javax.swing.JLabel lblLettersUsedTxt;
    private javax.swing.JLabel lblLivesOut;
    private javax.swing.JLabel lblLivesTxt;
    private javax.swing.JLabel lblRead;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTopicOut;
    private javax.swing.JLabel lblWordToComplete;
    private javax.swing.JLabel lblWordToCompleteOut;
    private javax.swing.JTextArea txtALettersUsed;
    private javax.swing.JTextField txtWordIn;
    // End of variables declaration//GEN-END:variables
}
